name: Build and Push

on:
  push:
    branches: [ main ]

env:
  # env for container build
  APP_NAME: 'galg-vision-api-demo'
  CONTAINER_REGISTRY: 'bizerbacz'
  DOCKERFILE_PATH: '.'
  TAG: '${{ github.run_id }}'

jobs:
  CI-build-set-versions:
    name: Set versions
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      branch: ${{ steps.branch.outputs.branch }}
    steps:
      # Set App version
      - name: version
        run: echo "::set-output name=version::$(date +'%Y-%m-%d.')${{ github.run_number }}"
        id: version

      # Set build branch name
      - name: generate tag with branch name
        run: echo "::set-output name=branch::${GITHUB_REF##*/}"
        id: branch

  CI-build-and-publish-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: CI-build-set-versions
    steps:
      # Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@master

      # Login to Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Diag print
      - name: print version
        run: echo ${{ needs.CI-build-set-versions.outputs.version }}

      - name: print branch
        run: echo ${{ needs.CI-build-set-versions.outputs.branch }}

      - name: Write a version to a file
        run: echo ${{ needs.CI-build-set-versions.outputs.version }} > version.txt

      # Container build and push to an Azure Container Registry (ACR)
      - run: |
          echo "Print working directory"
          pwd
          echo "List actual directory"
          ls

          docker build . -t ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ needs.CI-build-set-versions.outputs.version }}
          docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ needs.CI-build-set-versions.outputs.version }}
          docker tag ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ needs.CI-build-set-versions.outputs.version }} ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ needs.CI-build-set-versions.outputs.branch }}
          docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ needs.CI-build-set-versions.outputs.branch }}
          docker tag ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ needs.CI-build-set-versions.outputs.branch }} ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:latest
          docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:latest
